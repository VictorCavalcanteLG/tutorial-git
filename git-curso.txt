==CONFIGURAR NOME DE USUARIO==
git config --global user.name "Victor Cavalcante"

==CONFIGURAR E-MAIL==
git config --global user.email "cavalcante.victor.l.g@gmail.com"

==CONFIGURAR EDITOR PRINCIPAL==
git config --global core.editor 'definir ainda'

==SABER O VALOR DAS CHAVES==
git config user.name
	   user.email
           --list

==INICIALIZAR UM REPOSITORIO NO GIT==
git init


==LOGS==
git log
git log --decorate
git log --author="autor"
git log shortlog
git log shortlog -sn
git log --graph

==HASH==
MOSTRA O QUE FOI ACRESCENTADO DE ACORDO COM A HASH
git show *hash*

==DIFF==
MOSTRA AS MUDANÇAS
git diff
git diff --name-only

==RESETAR==
CASO ESTEJA EM MODIFICADO E VOLTAR
git checkout *arquivo*
CASO ESTEJA ESTAGED -UNSTAGED
git reset HEAD *arquivo*

VOLTA PRA STAGED
git reset --soft *HASH DO COMMIT ANTERIOR*

VOLTA PRA ANTES DO STAGED
git reset --mixes

EXCLUI TODAS A MODIFICAÇÕES DO COMMIT
git reset --hard


==REPOSITORIO REMOTO==
ADICIONAR NOVO REPOSITORIO
$ git remote add origin https://github.com/VictorCavalcanteLG/tutorial-git.git
VER OS REPOSITORIOS
git remote -v
UPLOAD PRO REPOSITORIO
git push -u origin master

CLONAR O REPOSITORIO
git clone *endereço do escolhido* *novo nome*

==BRANCH==
CRIAR BRANCH
git checkout -b *nome*
git branch
git checkout *nome do branch que quer mudar*

APAGAR BRANCH
git checkout -D *nome*


==MERGE-REBASE==
git merge *nome branch*
git rebase *nome branch*

==GIT STASH==
git stash
git stash apply
git stash list
git stash clear

==ALIAS==
git config --global alias.*abreviatura do comando*  *comando*

==TAG==
git tag -a 1.0.0 -m "*comentario*"
git push origin master --tags

==REVERT==
git revert *hash do commit*

==APAGAR TAG E BRANCH DO REPOSITORIO==
APAGA LOCAL
git tag -d *tag*
NO REPOSITORIO
git push origin :*tag*
git push origin :*branch*






